{"version":3,"sources":["examples/stateHookExample.js","examples/useEffectExample.js","examples/useRefExample.js","examples/useMemoExample.js","examples/notImportant/somethingForCallback.js","examples/useCallbackExample.js","examples/notImportant/containerForContext.js","examples/notImportant/tyan.png","examples/notImportant/alertForContext.js","examples/useContextExample.js","examples/myHook.js","App.js","index.js"],"names":["StateHook","useState","Math","trunc","random","number","setNumber","btnClass","disClass","split","push","join","className","style","fontSize","margin","onClick","prev","Button","variant","color","EffectHook","x","y","mouse","setMousePos","useEffect","window","addEventListener","event","clientX","clientY","RefHook","inputRef","useRef","oldValue","inputValue","setValue","current","width","ref","value","onChange","e","target","focus","smallBtn","marginLeft","MemoHook","book","setBook","something","setSomething","countBook","useMemo","list","console","log","countAllPeople","Something","callbackRequest","someText","setSomeText","getSomething","padding","textAlign","CallbackHook","colored","setColored","count","setCount","styles","myCallbackFunc","useCallback","somethingNumber","toFixed","ContextContainer","toggle","hidden","setHidden","hideTitle","fontWeight","Alert","useContext","AlertContext","src","image","marginTop","React","createContext","ContextHook","alert","setAlert","Provider","useInput","bind","clear","MyHook","name","lastName","type","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b359fa8b.chunk.js","sourcesContent":["/**\n * Хук useState используется для хранения и изменения данных\n */\n\nimport React, {useState} from 'react'\nimport Button from '@material-ui/core/Button';\n\nfunction StateHook() {\n    const [number, setNumber] = useState(() => {   // первоначальное значение, м.б. рассчитано или получено\n        return Math.trunc(Math.random() * 20);\n    });\n\n    // disable кнопки (класса) если значение меньше 0\n    let btnClass = 'btn cyan';\n    if (number < 0) {\n        let disClass = btnClass.split(' ');\n        disClass.push('disabled');\n        btnClass = disClass.join(' ');\n    }\n\n    // изменение стора\n    function incr() {\n        setNumber(prev => prev + 20);      // изменение state через колбэк, меняем не сам стейт, а предыдущее значение\n    }\n    function decr() {\n        setNumber(number - 20);\n    }\n    function setRandNumber() {\n        setNumber(Math.trunc(Math.random() * 40));\n    }\n\n    return (\n    <div>\n        <div className=\"App-center\">\n            <p className=\"App-link\" style={{fontSize: '33px', margin: '10px'}}>     {/* inline стили */}\n                {number}\n            </p>\n            <div className=\"mainContainer\">\n                <button className=\"waves-effect waves-light btn\" onClick={incr}>plus</button>\n                <Button variant=\"contained\" color=\"primary\" className={btnClass} onClick={decr}>minus</Button>  {/* material UI */}\n                <Button variant=\"contained\" color=\"primary\" className=\"red\" onClick={setRandNumber}>random</Button>  {/* material UI */}\n            </div>\n        </div>\n    </div>\n    );\n}\n\nexport default StateHook;\n","/**\n * Хук useEffect вызывается при каждом рендере, когда меняется state для переменной (если она указана)\n */\n\nimport React, {useState, useEffect} from 'react'\n\nfunction EffectHook() {\n    const [mouse, setMousePos] = useState({\n        x: 0,\n        y: 0\n    });\n\n    // вызывается при каждом рендере, когда меняется state для mouse. Можно сделать GET-запрос напр.\n    useEffect(() => {\n        // fetch ('https://api.site.com/${position}').then(res => res.json()).then(json => setData(json))   --- обратились к апи конкретного position и вывели данные\n        // console.log('Mouse position was changed to ' + mouse.x + ' ' + mouse.y);\n    }, [mouse]);     // вызывается, только если изменилось [mouse, setMousePos]  // [mouse] - необязательный параметр\n\n    // вызовется всего один раз при первом рендеринге, т.к. второй параметр не существует []\n    useEffect(() => {\n        window.addEventListener('mousemove', event => {\n            setMousePos({\n                x: event.clientX,\n                y: event.clientY\n            })\n        })\n    }, []);\n\n    return (\n    <div className=\"centerContainer\">\n        <p className=\"App-link\">\n            Вы находитесь здесь:\n            <span className=\"orange-text darken-1\"> {mouse.x} {mouse.y} </span>\n        </p>\n    </div>\n    );\n}\n\nexport default EffectHook;\n","/**\n * Хук useRef это аналог useState, для изменения переменной без перерендеринга. Также по нему можно обращаться к dom\n */\n\nimport React, {useRef, useEffect, useState} from 'react'\nimport Button from \"@material-ui/core/Button\";\n\nfunction RefHook() {\n    const inputRef = useRef(null);        // используем референс, чтобы обозначить дом-элемент\n    const oldValue = useRef('ʕ•ᴥ•ʔ');        // используем референс, чтобы запомнить предыдущее значение\n    const [inputValue, setValue] = useState('Hello');\n\n    const focus = () => inputRef.current.focus();  // поставить фокус на дом-объект\n\n    useEffect(() => {\n        oldValue.current = inputValue;\n    }, [inputValue]);\n\n    function changeValue(e) {\n        setValue(e.target.value)\n    }\n\n    return (\n        <div>\n            <div className=\"whiteBox\">\n                <input\n                    style={{width: '100px'}}\n                    ref = {inputRef}                       // имя референса\n                    value = {inputValue}\n                    onChange = {changeValue}\n                />\n                <Button variant=\"contained\" color=\"primary\" onClick={focus}>Get my hello</Button>\n            </div>\n            <p className=\"App-link pContainer\">А раньше было <span className=\"orange-text darken-1\">{oldValue.current}</span></p>\n        </div>\n    );\n}\n\nexport default RefHook;\n","/**\n * Хук useMemo используется для кеширования, чтобы не вызывать функцию, если перендеринг произошел без ее участия\n */\n\nimport React, {useMemo, useState} from 'react'\n// import Button from '@material-ui/core/Button';\n\nfunction countAllPeople(something, book) {\n    let list = 1;\n    while (list < 10000) list++;\n\n    console.log('very long thing');\n\n    return something + book;\n}\n\nconst smallBtn = {\n    width: '60px',\n    marginLeft: '3px'\n};\n\nfunction MemoHook() {\n    const [book, setBook] = useState(100);\n    const [something, setSomething] = useState(42);\n\n    // функция вызовется только если перерендеринг был из-за изменения переменной book (при изменении something рендер произойдет, но фунцкия не вызовется)\n    const countBook = useMemo(() => {\n       return countAllPeople(something, book);\n    }, [book]);\n\n    function incrBook() {\n        setBook(prev => prev + 20);\n    }\n\n    function changeSomething() {\n        setSomething(1 + something * Math.trunc(Math.random() * 23 / 7));\n    }\n\n    return (\n        <div className=\"App-center\">\n            <div className=\"mainContainer\">\n                <p className='pContainer green-text darken-1'>{book}</p>\n                <p className='pContainer orange-text darken-1'>{something}</p>\n                <p className='pContainer green-text darken-1'>{countBook}</p>\n                <button className=\"waves-effect waves-light btn green\" style={smallBtn} onClick={incrBook}>&#10004;</button>\n                <button className=\"waves-effect waves-light btn red\" style={smallBtn} onClick={changeSomething}>&#10006;</button>\n            </div>\n        </div>\n    );\n}\n\nexport default MemoHook;\n","/**\n * Вспомогательный компонент, который принимает колбэк-функцию\n */\n\nimport React, {useEffect, useState} from 'react'\n\nexport default function Something({callbackRequest}) {\n    const [someText, setSomeText] = useState();\n\n    useEffect(() => {\n        const getSomething = callbackRequest(13); // т.к. мы получили именно функцию, можем вызвать ее со своим значением\n        setSomeText(getSomething);              // метод изменения стейта - проп функция-коллбэк, которая вернет значение\n    }, [callbackRequest]);\n\n    return (\n        <div>\n            <p className='green darken-2' style={{padding: '2px', width: '240px', textAlign: 'center'}}>{someText}</p>\n        </div>\n    );\n}\n","/**\n * Хук useCallback используется, если нужно вызвать функцию при изменении определенного параметра. В отличии от useMemo,\n * он возвращает не значение, а саму функцию - которую можно будет передать дальше и выполнить\n */\n\nimport React, {useCallback, useState} from 'react'\nimport Something from './notImportant/somethingForCallback'  // компонент, который примет коллбэк-функцию\n\nfunction CallbackHook() {\n    const [colored, setColored] = useState(false);\n    const [count, setCount] = useState(1);\n\n    const styles = {\n        color: colored ? 'pink' : 'gray',\n        fontSize: '16px'\n    };\n\n    // функция для коллбэка\n    // колбэк вызовется при изменении параметра colored. Это может быть GET-запрос, например, получить запись № {count}\n    const myCallbackFunc = useCallback((somethingNumber) => {\n        return (count * 0.3 + Math.random() * somethingNumber).toFixed(3) + ' %';\n    }, [count]);\n\n    return (\n        <div className=\"App-center\">\n            <div className=\"mainContainer\">\n                <p className='pContainer darkred-text darken-1' style={styles}>Все будет хорошо</p>\n                <button\n                    className=\"waves-effect waves-light btn light-green accent-2\"\n                    style={{width: '115px', color: '#000'}}\n                    onClick={() => { setColored(prev => !prev) }}\n                >good button</button>\n            </div>\n            <div className=\"mainContainer\">\n                <p className='pContainer darkred-text darken-1'>{count}</p>\n                <button\n                    className=\"waves-effect waves-light btn lime accent-2\"\n                    style={{width: '115px', color: '#000'}}\n                    onClick={() => { setCount(prev => prev + 2) }}\n                >pip</button>\n            </div>\n\n            {/* передали колбэк-функцию в другой компонент */}\n            <Something callbackRequest={myCallbackFunc} />\n        </div>\n    );\n}\n\nexport default CallbackHook;\n","/**\n * Вспомогательный компонент для хука useContext - кнопка вызова алерта\n */\n\nimport React, {useEffect, useRef, useState} from 'react'\n\nexport default function ContextContainer({toggle}) {\n    const [hidden, setHidden] = useState(true);\n    let hideTitle = useRef('Показать');\n\n    useEffect(() => {\n        hideTitle.current = hidden ? 'Скрыть' : 'Показать'\n    }, [hidden]);\n\n    const buttonHandler = () => {\n        toggle();\n        setHidden(prev => !prev);\n    };\n\n    return (\n        <div>\n            <button\n                className=\"waves-effect waves-light btn\"\n                style={{color: '#000', fontWeight: 'bold'}}\n                onClick={buttonHandler}\n            >{hideTitle.current} девушку</button>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/tyan.e86bb4ea.png\";","/**\n * Вспомогательный компонент для хука useContext - всплывающее сообщение\n */\n\nimport React, {useContext} from 'react'\nimport image from './tyan.png';\nimport {AlertContext} from '../useContextExample' // импортировали контекст из родительского файла\n\nexport default function Alert() {\n    const alert = useContext(AlertContext);\n\n    // показать либо скрыть алерт\n    if(!alert) return null;\n\n    return (\n        <div>\n            <img src={image} style={{marginTop: '5px'}}/>\n        </div>\n    )\n}\n","/**\n * Хук useContext позволяет избежать передачу props в дочерние компоненты\n */\n\nimport React, {useState} from 'react'\nimport ContextContainer from './notImportant/containerForContext'\nimport Alert from './notImportant/alertForContext'\n\n//создаем обертку-контекст для дочерних элементов\nexport const AlertContext = React.createContext();\n\nfunction ContextHook() {\n    // состояние алерта, по-ум. false\n    const [alert, setAlert] = useState(false);\n\n    // метод для переключение алерта\n    const toggleAlert = () => setAlert(prev => !prev);\n\n    return (\n        // тип контекста - провайдер, т.к. это родительский компонент, который предоставляет состояние\n        <AlertContext.Provider value={alert}>\n            <div className=\"App-center\" style={{marginTop: '-30px'}}>\n                <p style={{ fontSize: '18px', color: '#e6ee9c' }}>Муха - это маленькая птица</p>\n                <ContextContainer toggle={toggleAlert}/>\n                <Alert />\n            </div>\n        </AlertContext.Provider>\n    );\n}\n\nexport default ContextHook;\n","/**\n * Пример кастомного хука\n */\n\nimport React, {useState} from 'react'\n\n// кастомный хук для обработки инпутов\nfunction useInput(oldValue) {\n    const [value,setValue] = useState(oldValue);\n\n    const onChange = event => {\n        setValue(event.target.value);\n    };\n\n    // функция очистки\n    const clear = () => setValue('');\n\n    return {\n        bind: {value, onChange},    // базовые аттрибуты обычного инпута\n        value,\n        clear                       // кастомный метод\n    }\n}\n\nfunction MyHook() {\n    const name = useInput('Petr');\n    const lastName = useInput('Gabrielevski');\n\n    return (\n        <div className=\"App-center\">\n            <div>\n                <input type='text' style={{width: '200px'}} {...name.bind}/>\n                <button className=\"waves-effect waves-light btn pink darken-4\" style={{width: '40px'}} onClick={() => name.clear()}>x</button>\n            </div>\n            <div>\n                <input type='text' style={{width: '200px'}} {...lastName.bind}/>\n                <button className=\"waves-effect waves-light btn pink darken-4\" style={{width: '40px'}} onClick={() => lastName.clear()}>x</button>\n            </div>\n        </div>\n    );\n}\n\nexport default MyHook;\n","import React from 'react'\r\nimport './App.css';\r\nimport './examples/examplesStyle.css';\r\nimport StateHook from './examples/stateHookExample';\r\nimport EffectHook from './examples/useEffectExample';\r\nimport RefHook from './examples/useRefExample';\r\nimport MemoHook from './examples/useMemoExample';\r\nimport CallbackHook from './examples/useCallbackExample';\r\nimport ContextHook from './examples/useContextExample'\r\nimport MyHook from './examples/myHook'\r\n\r\nfunction App() {\r\n    return (\r\n    <div className=\"App\">\r\n        <EffectHook />\r\n        <StateHook />\r\n        <RefHook />\r\n        <MemoHook />\r\n        <CallbackHook />\r\n        <ContextHook />\r\n\r\n        <MyHook />\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'materialize-css/dist/css/materialize.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}